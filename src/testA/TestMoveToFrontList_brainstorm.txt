TestMoveToFrontList.java

- Constructor: public MoveToFrontList(Comparator<? super E> c)
	- Pass incorrect type
	- Test empty

- incCount(E data): increment counter looks through list searching for data if found increments the 
	count of the node and moves to front. If not found moves value to front of the list.
	
- getSize()
	- Test non-empty list
	- Test after adding same element multiple times (size increments by 1 only)
	- Test after adding unique elements multiple times each
	- Test same size after incCount call (element is already present)
	- Test same size after getCount call
	- Test increment size after incCall call (element is not already present)

- getCount(E data)
	- Test for element not in list
	- Test for elements in front/middle/back of list
	- Test for an element twice:
		o See if count changed
		o Ensure element is found/not found again

- public SimpleIterator<DataCount<E>> getIterator()
	- Test null iterator on empty list
	- Test non-null iterator on non-empty list
	- Test correct ordering after incCount calls
	- Test correct ordering after getSize call (shouldn't change)
	- Test next on null, fully iterated, and normal iterators (should throw exceptions on 1st two)
	- Test hasNext on null, fully iterated, and normal iterators

Inner class ListNode

